{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { NEW_MESSAGE, CONNECTED, CLEAR, USER, CLIENTS, CURRENT_PLAYER, NEW_TIME, GAME_START, SET_WORD } from \"./actionConstants\";\nconst INITIAL_STATE = {\n  isConnected: false,\n  // Extra state property for the last extension activity\n  messages: [],\n  clear: false,\n  user: \"\",\n  clients: [],\n  current_player: \"\",\n  time: 30,\n  start: \"new\",\n  word: \"\"\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NEW_MESSAGE:\n      return { ...state,\n        messages: action.payload.messages\n      };\n\n    case CONNECTED:\n      return { ...state,\n        isConnected: true\n      };\n\n    case CLEAR:\n      return { ...state,\n        clear: action.payload.p\n      };\n\n    case USER:\n      return { ...state,\n        user: action.payload.user\n      };\n\n    case CLIENTS:\n      return { ...state,\n        clients: action.payload.clients\n      };\n\n    case CURRENT_PLAYER:\n      return { ...state,\n        current_player: action.payload.user\n      };\n\n    case NEW_TIME:\n      return { ...state,\n        time: action.payload.time\n      };\n\n    case SET_WORD:\n      return { ...state,\n        word: action.payload.word\n      };\n\n    case GAME_START:\n      console.log(\"game start\", action.payload.start);\n      return { ...state,\n        start: action.payload.start\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","NEW_MESSAGE","CONNECTED","CLEAR","USER","CLIENTS","CURRENT_PLAYER","NEW_TIME","GAME_START","SET_WORD","INITIAL_STATE","isConnected","messages","clear","user","clients","current_player","time","start","word","rootReducer","state","action","type","payload","p","console","log"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,cANF,EAOEC,QAPF,EAQEC,UARF,EASEC,QATF,QAUO,mBAVP;AAYA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,KADO;AACA;AACpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE,KAHa;AAIpBC,EAAAA,IAAI,EAAE,EAJc;AAKpBC,EAAAA,OAAO,EAAE,EALW;AAMpBC,EAAAA,cAAc,EAAE,EANI;AAOpBC,EAAAA,IAAI,EAAE,EAPc;AAQpBC,EAAAA,KAAK,EAAE,KARa;AASpBC,EAAAA,IAAI,EAAE;AATc,CAAtB;;AAYA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGX,aAAT,EAAwBY,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtB,WAAL;AACE,aAAO,EAAE,GAAGoB,KAAL;AAAYT,QAAAA,QAAQ,EAAEU,MAAM,CAACE,OAAP,CAAeZ;AAArC,OAAP;;AACF,SAAKV,SAAL;AACE,aAAO,EAAE,GAAGmB,KAAL;AAAYV,QAAAA,WAAW,EAAE;AAAzB,OAAP;;AACF,SAAKR,KAAL;AACE,aAAO,EAAE,GAAGkB,KAAL;AAAYR,QAAAA,KAAK,EAAES,MAAM,CAACE,OAAP,CAAeC;AAAlC,OAAP;;AACF,SAAKrB,IAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACE,OAAP,CAAeV;AAFhB,OAAP;;AAKF,SAAKT,OAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELN,QAAAA,OAAO,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAFnB,OAAP;;AAKF,SAAKT,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELL,QAAAA,cAAc,EAAEM,MAAM,CAACE,OAAP,CAAeV;AAF1B,OAAP;;AAIF,SAAKP,QAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAFhB,OAAP;;AAKF,SAAKR,QAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELF,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFhB,OAAP;;AAKF,SAAKX,UAAL;AACEkB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,MAAM,CAACE,OAAP,CAAeN,KAAzC;AACA,aAAO,EACL,GAAGG,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAFjB,OAAP;;AAKF;AACE,aAAOG,KAAP;AA5CJ;AA8CD,CA/CD;;AAiDA,eAAevB,WAAW,CAACsB,WAAD,EAAcrB,eAAe,CAACC,eAAD,CAA7B,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {\n  NEW_MESSAGE,\n  CONNECTED,\n  CLEAR,\n  USER,\n  CLIENTS,\n  CURRENT_PLAYER,\n  NEW_TIME,\n  GAME_START,\n  SET_WORD,\n} from \"./actionConstants\";\n\nconst INITIAL_STATE = {\n  isConnected: false, // Extra state property for the last extension activity\n  messages: [],\n  clear: false,\n  user: \"\",\n  clients: [],\n  current_player: \"\",\n  time: 30,\n  start: \"new\",\n  word: \"\",\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NEW_MESSAGE:\n      return { ...state, messages: action.payload.messages };\n    case CONNECTED:\n      return { ...state, isConnected: true };\n    case CLEAR:\n      return { ...state, clear: action.payload.p };\n    case USER:\n      return {\n        ...state,\n        user: action.payload.user,\n      };\n\n    case CLIENTS:\n      return {\n        ...state,\n        clients: action.payload.clients,\n      };\n\n    case CURRENT_PLAYER:\n      return {\n        ...state,\n        current_player: action.payload.user,\n      };\n    case NEW_TIME:\n      return {\n        ...state,\n        time: action.payload.time,\n      };\n\n    case SET_WORD:\n      return {\n        ...state,\n        word: action.payload.word,\n      };\n\n    case GAME_START:\n      console.log(\"game start\", action.payload.start);\n      return {\n        ...state,\n        start: action.payload.start,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));\n"]},"metadata":{},"sourceType":"module"}