{"ast":null,"code":"var _jsxFileName = \"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/word.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { words } from \"../data/words\";\nimport { setWord } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Word = () => {\n  _s();\n\n  const current_player = useSelector(state => state.current_player);\n  const clients = useSelector(state => state.clients);\n  const user = useSelector(state => state.user);\n  const [word, setCurrentWord] = useState(\"\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"current player\", current_player);\n\n    if (current_player !== null) {\n      let index = clients.indexOf(current_player);\n      console.log(\"index\", index);\n      let current_word = words[index];\n      console.log(\"current_word\", current_word);\n      dispatch(setWord(current_word));\n      setCurrentWord(current_word);\n    }\n  }, [dispatch, current_player]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: current_player === user && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current word: \", word]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 40\n    }, this)\n  }, void 0, false);\n};\n\n_s(Word, \"0+lxw75qhpeaW6bVGNV/rvDCgX8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Word;\nexport default Word;\n\nvar _c;\n\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/word.js"],"names":["useState","useEffect","useDispatch","useSelector","words","setWord","Word","current_player","state","clients","user","word","setCurrentWord","dispatch","console","log","index","indexOf","current_word"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,cAAc,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,cAAlB,CAAlC;AACA,QAAME,OAAO,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA3B;AACA,QAAMC,IAAI,GAAGP,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,cAAP,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,cAA9B;;AACA,QAAIA,cAAc,KAAK,IAAvB,EAA6B;AAC3B,UAAIS,KAAK,GAAGP,OAAO,CAACQ,OAAR,CAAgBV,cAAhB,CAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACA,UAAIE,YAAY,GAAGd,KAAK,CAACY,KAAD,CAAxB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,YAA5B;AACAL,MAAAA,QAAQ,CAACR,OAAO,CAACa,YAAD,CAAR,CAAR;AACAN,MAAAA,cAAc,CAACM,YAAD,CAAd;AACD;AACF,GAVQ,EAUN,CAACL,QAAD,EAAWN,cAAX,CAVM,CAAT;AAYA,sBAAO;AAAA,cAAGA,cAAc,KAAKG,IAAnB,iBAA2B;AAAA,mCAAmBC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9B,mBAAP;AACD,CArBD;;GAAML,I;UACmBH,W,EACPA,W,EACHA,W,EAGID,W;;;KANbI,I;AAuBN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { words } from \"../data/words\";\nimport { setWord } from \"../redux/actions\";\nconst Word = () => {\n  const current_player = useSelector((state) => state.current_player);\n  const clients = useSelector((state) => state.clients);\n  const user = useSelector((state) => state.user);\n  const [word, setCurrentWord] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(\"current player\", current_player);\n    if (current_player !== null) {\n      let index = clients.indexOf(current_player);\n      console.log(\"index\", index);\n      let current_word = words[index];\n      console.log(\"current_word\", current_word);\n      dispatch(setWord(current_word));\n      setCurrentWord(current_word);\n    }\n  }, [dispatch, current_player]);\n\n  return <>{current_player === user && <h1>Current word: {word}</h1>}</>;\n};\n\nexport default Word;\n"]},"metadata":{},"sourceType":"module"}