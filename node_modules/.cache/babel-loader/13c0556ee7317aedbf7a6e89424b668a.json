{"ast":null,"code":"import React, { useState } from \"react\";\nimport { startToDraw } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\n\nconst Sketch = p5 => {\n  let data = {};\n  let socket;\n  let setClear;\n\n  p5.myCustomRedrawAccordingToNewPropsHandler = props => {\n    console.log(\"prop\", props);\n\n    if (props.clear) {\n      p5.clear();\n      p5.background(250);\n      socket.emit(\"DRAWING\", {});\n    }\n\n    if (props.data) {\n      data = props.data;\n      console.log(\"data\", data);\n    }\n\n    setClear = props.setClear;\n    console.log(\"setclear\", setClear);\n  };\n\n  p5.setup = () => {\n    socket = io.connect(\"localhost:4002\");\n    p5.createCanvas(670, 600);\n    p5.background(250);\n    socket.on(\"DRAWING\", data => {\n      console.log(data);\n      p5.strokeWeight(10);\n      p5.line(data.mouseX, data.mouseY, data.pmouseX, data.pmouseY);\n    });\n  };\n\n  p5.draw = () => {\n    p5.line(data.mouseX, data.mouseY, data.pmouseX, data.pmouseY);\n  };\n\n  p5.mouseDragged = () => {\n    p5.strokeWeight(10);\n    p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\n    setClear(false);\n    socket.emit(\"DRAWING\", {\n      mouseX: p5.mouseX,\n      mouseY: p5.mouseY,\n      pmouseX: p5.pmouseX,\n      pmouseY: p5.pmouseY\n    });\n  };\n};\n\n_c = Sketch;\nexport default Sketch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sketch\");","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/canvas/sketch.js"],"names":["React","useState","startToDraw","useDispatch","useSelector","io","Sketch","p5","data","socket","setClear","myCustomRedrawAccordingToNewPropsHandler","props","console","log","clear","background","emit","setup","connect","createCanvas","on","strokeWeight","line","mouseX","mouseY","pmouseX","pmouseY","draw","mouseDragged"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,MAAMC,MAAM,GAAIC,EAAD,IAAQ;AACrB,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,MAAJ;AACA,MAAIC,QAAJ;;AAEAH,EAAAA,EAAE,CAACI,wCAAH,GAA+CC,KAAD,IAAW;AACvDC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,KAApB;;AACA,QAAIA,KAAK,CAACG,KAAV,EAAiB;AACfR,MAAAA,EAAE,CAACQ,KAAH;AACAR,MAAAA,EAAE,CAACS,UAAH,CAAc,GAAd;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuB,EAAvB;AACD;;AAED,QAAIL,KAAK,CAACJ,IAAV,EAAgB;AACdA,MAAAA,IAAI,GAAGI,KAAK,CAACJ,IAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,IAApB;AACD;;AAEDE,IAAAA,QAAQ,GAAGE,KAAK,CAACF,QAAjB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AACD,GAfD;;AAiBAH,EAAAA,EAAE,CAACW,KAAH,GAAW,MAAM;AACfT,IAAAA,MAAM,GAAGJ,EAAE,CAACc,OAAH,CAAW,gBAAX,CAAT;AAEAZ,IAAAA,EAAE,CAACa,YAAH,CAAgB,GAAhB,EAAqB,GAArB;AACAb,IAAAA,EAAE,CAACS,UAAH,CAAc,GAAd;AACAP,IAAAA,MAAM,CAACY,EAAP,CAAU,SAAV,EAAsBb,IAAD,IAAU;AAC7BK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAD,MAAAA,EAAE,CAACe,YAAH,CAAgB,EAAhB;AACAf,MAAAA,EAAE,CAACgB,IAAH,CAAQf,IAAI,CAACgB,MAAb,EAAqBhB,IAAI,CAACiB,MAA1B,EAAkCjB,IAAI,CAACkB,OAAvC,EAAgDlB,IAAI,CAACmB,OAArD;AACD,KAJD;AAKD,GAVD;;AAYApB,EAAAA,EAAE,CAACqB,IAAH,GAAU,MAAM;AACdrB,IAAAA,EAAE,CAACgB,IAAH,CAAQf,IAAI,CAACgB,MAAb,EAAqBhB,IAAI,CAACiB,MAA1B,EAAkCjB,IAAI,CAACkB,OAAvC,EAAgDlB,IAAI,CAACmB,OAArD;AACD,GAFD;;AAIApB,EAAAA,EAAE,CAACsB,YAAH,GAAkB,MAAM;AACtBtB,IAAAA,EAAE,CAACe,YAAH,CAAgB,EAAhB;AACAf,IAAAA,EAAE,CAACgB,IAAH,CAAQhB,EAAE,CAACiB,MAAX,EAAmBjB,EAAE,CAACkB,MAAtB,EAA8BlB,EAAE,CAACmB,OAAjC,EAA0CnB,EAAE,CAACoB,OAA7C;AACAjB,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEAD,IAAAA,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuB;AACrBO,MAAAA,MAAM,EAAEjB,EAAE,CAACiB,MADU;AAErBC,MAAAA,MAAM,EAAElB,EAAE,CAACkB,MAFU;AAGrBC,MAAAA,OAAO,EAAEnB,EAAE,CAACmB,OAHS;AAIrBC,MAAAA,OAAO,EAAEpB,EAAE,CAACoB;AAJS,KAAvB;AAMD,GAXD;AAYD,CAlDD;;KAAMrB,M;AAoDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { startToDraw } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\n\nconst Sketch = (p5) => {\n  let data = {};\n  let socket;\n  let setClear;\n\n  p5.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n    console.log(\"prop\", props);\n    if (props.clear) {\n      p5.clear();\n      p5.background(250);\n      socket.emit(\"DRAWING\", {});\n    }\n\n    if (props.data) {\n      data = props.data;\n      console.log(\"data\", data);\n    }\n\n    setClear = props.setClear;\n    console.log(\"setclear\", setClear);\n  };\n\n  p5.setup = () => {\n    socket = io.connect(\"localhost:4002\");\n\n    p5.createCanvas(670, 600);\n    p5.background(250);\n    socket.on(\"DRAWING\", (data) => {\n      console.log(data);\n      p5.strokeWeight(10);\n      p5.line(data.mouseX, data.mouseY, data.pmouseX, data.pmouseY);\n    });\n  };\n\n  p5.draw = () => {\n    p5.line(data.mouseX, data.mouseY, data.pmouseX, data.pmouseY);\n  };\n\n  p5.mouseDragged = () => {\n    p5.strokeWeight(10);\n    p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\n    setClear(false);\n\n    socket.emit(\"DRAWING\", {\n      mouseX: p5.mouseX,\n      mouseY: p5.mouseY,\n      pmouseX: p5.pmouseX,\n      pmouseY: p5.pmouseY,\n    });\n  };\n};\n\nexport default Sketch;\n"]},"metadata":{},"sourceType":"module"}