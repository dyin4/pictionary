{"ast":null,"code":"var _jsxFileName = \"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport JoinChat from \"../components/join-chat\";\nimport Canvas from \"../components/canvas/canvas\";\nimport Messages from \"../components/messages\";\nimport Form from \"../components/form\";\nimport { startGame, setStart } from \"../redux/actions\";\nimport PlayerList from \"../components/player-list\";\nimport Timer from \"../components/timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const isConnected = useSelector(state => state.isConnected);\n  const user = useSelector(state => state.user);\n  const start = useSelector(state => state.start);\n  const current_player = useSelector(state => state.current_player);\n  const clients = useSelector(state => state.clients);\n  const dispatch = useDispatch();\n  /* The following is not needed after the extension activities. JoinChat now\n   *  handles connecting to the chat.\n   *  const dispatch = useDispatch();\n   *  useEffect(() => dispatch(connectToChat()), [dispatch]);\n   *\n   */\n\n  console.log(\"connected\", isConnected);\n  console.log(\"start\", start);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), \"//Current who is drawing, TODO: styling\", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Current: \", current_player !== null ? current_player : \"game over\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch(startGame(0)); // dispatch(startTheTimer(5));\n          //dispatch(setStart(true));\n        },\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          let index = clients.indexOf(current_player) + 1;\n          dispatch(startGame(index)); // dispatch(startTheTimer(5));\n        },\n        children: \"Next Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-7\",\n          children: /*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-5\",\n          children: [/*#__PURE__*/_jsxDEV(Messages, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlayerList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(JoinChat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2TZlrmW8VCEwS0kJpoBx3wlmFV0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/views/App.js"],"names":["useDispatch","useSelector","JoinChat","Canvas","Messages","Form","startGame","setStart","PlayerList","Timer","App","isConnected","state","user","start","current_player","clients","dispatch","console","log","index","indexOf"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,kBAApC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,WAAW,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAME,IAAI,GAAGZ,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AACA,QAAMC,KAAK,GAAGb,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACE,KAAlB,CAAzB;AACA,QAAMC,cAAc,GAAGd,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACG,cAAlB,CAAlC;AACA,QAAMC,OAAO,GAAGf,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACI,OAAlB,CAA3B;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AAEA;AACF;AACA;AACA;AACA;AACA;;AACEkB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,WAAzB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGH,WAAW,gBACV;AAAA,8BACE;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,0DAGE;AAAA,gCACYE,cAAc,KAAK,IAAnB,GAA0BA,cAA1B,GAA2C,WADvD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AACE,QAAA,OAAO,EAAE,MAAM;AACbE,UAAAA,QAAQ,CAACX,SAAS,CAAC,CAAD,CAAV,CAAR,CADa,CAEb;AACA;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIc,KAAK,GAAGJ,OAAO,CAACK,OAAR,CAAgBN,cAAhB,IAAkC,CAA9C;AACAE,UAAAA,QAAQ,CAACX,SAAS,CAACc,KAAD,CAAV,CAAR,CAFa,CAGb;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAyBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eAmCE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA,oBADU,gBAuCV,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAxCJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CA7DD;;GAAMV,G;UACgBT,W,EACPA,W,EACCA,W,EACSA,W,EACPA,W,EACCD,W;;;KANbU,G;AA+DN,eAAeA,GAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\n\nimport JoinChat from \"../components/join-chat\";\nimport Canvas from \"../components/canvas/canvas\";\nimport Messages from \"../components/messages\";\nimport Form from \"../components/form\";\nimport { startGame, setStart } from \"../redux/actions\";\nimport PlayerList from \"../components/player-list\";\nimport Timer from \"../components/timer\";\n\nconst App = () => {\n  const isConnected = useSelector((state) => state.isConnected);\n  const user = useSelector((state) => state.user);\n  const start = useSelector((state) => state.start);\n  const current_player = useSelector((state) => state.current_player);\n  const clients = useSelector((state) => state.clients);\n  const dispatch = useDispatch();\n\n  /* The following is not needed after the extension activities. JoinChat now\n   *  handles connecting to the chat.\n   *  const dispatch = useDispatch();\n   *  useEffect(() => dispatch(connectToChat()), [dispatch]);\n   *\n   */\n  console.log(\"connected\", isConnected);\n  console.log(\"start\", start);\n  return (\n    <div className=\"container\">\n      {isConnected ? (\n        <>\n          <h1>{user}</h1>\n          //Current who is drawing, TODO: styling\n          <h1>\n            Current: {current_player !== null ? current_player : \"game over\"}\n          </h1>\n          <Timer />\n          <button\n            onClick={() => {\n              dispatch(startGame(0));\n              // dispatch(startTheTimer(5));\n              //dispatch(setStart(true));\n            }}\n          >\n            start\n          </button>\n          <button\n            onClick={() => {\n              let index = clients.indexOf(current_player) + 1;\n              dispatch(startGame(index));\n              // dispatch(startTheTimer(5));\n            }}\n          >\n            Next Player\n          </button>\n          <div className=\"row\">\n            <div className=\"col-sm-7\">\n              <Canvas />\n            </div>\n            {/*Chat window design*/}\n            <div className=\"col-sm-5\">\n              <Messages />\n              <Form />\n            </div>\n          </div>\n          <PlayerList />\n        </>\n      ) : (\n        <JoinChat />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}