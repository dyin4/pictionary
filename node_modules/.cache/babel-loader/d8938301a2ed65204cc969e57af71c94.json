{"ast":null,"code":"var _jsxFileName = \"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/canvas/canvas.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport sketch from \"./sketch\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearDraw } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Canvas = () => {\n  _s();\n\n  const data = useSelector(state => state.sketch);\n  const dispatch = useDispatch();\n  const cleared = useSelector(state => state.clear);\n  const current_player = useSelector(state => state.current_player);\n  const [clear, setClear] = useState(false);\n  useEffect(() => {\n    dispatch(clearDraw(clear));\n  }, [clear]); // useEffect(() => {\n  // }, [clear]);\n\n  console.log(\"clear\", clear);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(P5Wrapper, {\n      sketch: sketch,\n      clear: cleared,\n      data: data,\n      setClear: setClear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setClear(true),\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Canvas, \"gFVSTjYytBy/NVky0ypaZhdiP2Q=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/canvas/canvas.js"],"names":["useEffect","useState","sketch","P5Wrapper","useDispatch","useSelector","clearDraw","Canvas","data","state","dispatch","cleared","clear","current_player","setClear","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,qBAA1B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACP,MAAlB,CAAxB;AACA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGN,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACG,KAAlB,CAA3B;AACA,QAAMC,cAAc,GAAGR,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACI,cAAlB,CAAlC;AACA,QAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACJ,SAAS,CAACM,KAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAPmB,CAWnB;AAEA;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACA,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,MAAM,EAAEV,MADV;AAEE,MAAA,KAAK,EAAES,OAFT;AAGE,MAAA,IAAI,EAAEH,IAHR;AAIE,MAAA,QAAQ,EAAEM;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,MAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD,CA1BD;;GAAMP,M;UACSF,W,EACID,W,EACDC,W,EACOA,W;;;KAJnBE,M;AA4BN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport sketch from \"./sketch\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearDraw } from \"../../redux/actions\";\n\nconst Canvas = () => {\n  const data = useSelector((state) => state.sketch);\n  const dispatch = useDispatch();\n  const cleared = useSelector((state) => state.clear);\n  const current_player = useSelector((state) => state.current_player);\n  const [clear, setClear] = useState(false);\n\n  useEffect(() => {\n    dispatch(clearDraw(clear));\n  }, [clear]);\n\n  // useEffect(() => {\n\n  // }, [clear]);\n  console.log(\"clear\", clear);\n  return (\n    <>\n      <P5Wrapper\n        sketch={sketch}\n        clear={cleared}\n        data={data}\n        setClear={setClear}\n      ></P5Wrapper>\n      <button onClick={() => setClear(true)}>clear</button>\n    </>\n  );\n};\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}