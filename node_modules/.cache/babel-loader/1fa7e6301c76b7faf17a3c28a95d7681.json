{"ast":null,"code":"var _jsxFileName = \"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/messages.js\",\n    _s = $RefreshSig$();\n\nimport { startGame, sendToChat } from \"../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const messages = useSelector(state => state.messages);\n  const word = useSelector(state => state.word);\n  const current_player = useSelector(state => state.current_player);\n  const clients = useSelector(state => state.clients);\n  const dispatch = useDispatch();\n\n  const handleRightAnswer = username => {\n    console.log(\"right\", username);\n    dispatch(sendToChat(username + \"got the right answer\"));\n    let index = clients.indexOf(current_player) + 1;\n    console.log(\"index\", index);\n\n    if (current_player !== null) {\n      dispatch(startGame(index));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-striped table-bordered my-4\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: messages.map((message, index) => {\n        // console.log(message);\n        let arr = message.split(\" \");\n        let username = arr[0];\n        let answer = arr[2]; // console.log(\"answer\", answer);\n        // console.log(\"word\", word);\n\n        if (answer === word) {\n          handleRightAnswer(username);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ke: `msg-${index}`,\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `${answer === word ? \"table-success\" : \"\"}`,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"FnpMNF96/QThYuDwgiBv68JjVlc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/messages.js"],"names":["startGame","sendToChat","useDispatch","useSelector","Messages","messages","state","word","current_player","clients","dispatch","handleRightAnswer","username","console","log","index","indexOf","map","message","arr","split","answer"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAME,IAAI,GAAGJ,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AACA,QAAMC,cAAc,GAAGL,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACE,cAAlB,CAAlC;AACA,QAAMC,OAAO,GAAGN,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACG,OAAlB,CAA3B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,iBAAiB,GAAIC,QAAD,IAAc;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,QAArB;AACAF,IAAAA,QAAQ,CAACT,UAAU,CAACW,QAAQ,GAAG,sBAAZ,CAAX,CAAR;AACA,QAAIG,KAAK,GAAGN,OAAO,CAACO,OAAR,CAAgBR,cAAhB,IAAkC,CAA9C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;;AACA,QAAIP,cAAc,KAAK,IAAvB,EAA6B;AAC3BE,MAAAA,QAAQ,CAACV,SAAS,CAACe,KAAD,CAAV,CAAR;AACD;AACF,GARD;;AAUA,sBACE;AAAO,IAAA,SAAS,EAAC,yCAAjB;AAAA,2BACE;AAAA,gBACGV,QAAQ,CAACY,GAAT,CAAa,CAACC,OAAD,EAAUH,KAAV,KAAoB;AAChC;AACA,YAAII,GAAG,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAV;AACA,YAAIR,QAAQ,GAAGO,GAAG,CAAC,CAAD,CAAlB;AACA,YAAIE,MAAM,GAAGF,GAAG,CAAC,CAAD,CAAhB,CAJgC,CAKhC;AACA;;AACA,YAAIE,MAAM,KAAKd,IAAf,EAAqB;AACnBI,UAAAA,iBAAiB,CAACC,QAAD,CAAjB;AACD;;AAED,4BACE;AAAI,UAAA,EAAE,EAAG,OAAMG,KAAM,EAArB;AAAA,iCACE;AAAI,YAAA,SAAS,EAAG,GAAEM,MAAM,KAAKd,IAAX,GAAkB,eAAlB,GAAoC,EAAG,EAAzD;AAAA,sBACGW;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OAlBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAzCD;;GAAMd,Q;UACaD,W,EACJA,W,EACUA,W,EACPA,W,EACCD,W;;;KALbE,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import { startGame, sendToChat } from \"../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Messages = () => {\n  const messages = useSelector((state) => state.messages);\n  const word = useSelector((state) => state.word);\n  const current_player = useSelector((state) => state.current_player);\n  const clients = useSelector((state) => state.clients);\n  const dispatch = useDispatch();\n  const handleRightAnswer = (username) => {\n    console.log(\"right\", username);\n    dispatch(sendToChat(username + \"got the right answer\"));\n    let index = clients.indexOf(current_player) + 1;\n    console.log(\"index\", index);\n    if (current_player !== null) {\n      dispatch(startGame(index));\n    }\n  };\n\n  return (\n    <table className=\"table table-striped table-bordered my-4\">\n      <tbody>\n        {messages.map((message, index) => {\n          // console.log(message);\n          let arr = message.split(\" \");\n          let username = arr[0];\n          let answer = arr[2];\n          // console.log(\"answer\", answer);\n          // console.log(\"word\", word);\n          if (answer === word) {\n            handleRightAnswer(username);\n          }\n\n          return (\n            <tr ke={`msg-${index}`}>\n              <td className={`${answer === word ? \"table-success\" : \"\"}`}>\n                {message}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}