{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { NEW_MESSAGE, CONNECTED, CLEAR, USER, CLIENTS, CURRENT_PLAYER } from \"./actionConstants\";\nconst INITIAL_STATE = {\n  isConnected: false,\n  // Extra state property for the last extension activity\n  messages: [],\n  clear: false,\n  user: \"\",\n  clients: [],\n  current_player: \"\"\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NEW_MESSAGE:\n      return { ...state,\n        messages: action.payload.messages\n      };\n\n    case CONNECTED:\n      return { ...state,\n        isConnected: true\n      };\n\n    case CLEAR:\n      return { ...state,\n        clear: action.payload.p\n      };\n\n    case USER:\n      return { ...state,\n        user: action.payload.user\n      };\n\n    case CLIENTS:\n      return { ...state,\n        clients: action.payload.clients\n      };\n\n    case CURRENT_PLAYER:\n      return { ...state,\n        current_player: action.payload.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","NEW_MESSAGE","CONNECTED","CLEAR","USER","CLIENTS","CURRENT_PLAYER","INITIAL_STATE","isConnected","messages","clear","user","clients","current_player","rootReducer","state","action","type","payload","p"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,cANF,QAOO,mBAPP;AASA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,KADO;AACA;AACpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE,KAHa;AAIpBC,EAAAA,IAAI,EAAE,EAJc;AAKpBC,EAAAA,OAAO,EAAE,EALW;AAMpBC,EAAAA,cAAc,EAAE;AANI,CAAtB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,WAAL;AACE,aAAO,EAAE,GAAGc,KAAL;AAAYN,QAAAA,QAAQ,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAArC,OAAP;;AACF,SAAKP,SAAL;AACE,aAAO,EAAE,GAAGa,KAAL;AAAYP,QAAAA,WAAW,EAAE;AAAzB,OAAP;;AACF,SAAKL,KAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYL,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAAP,CAAeC;AAAlC,OAAP;;AACF,SAAKf,IAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAFhB,OAAP;;AAKF,SAAKN,OAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAFnB,OAAP;;AAKF,SAAKN,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,cAAc,EAAEG,MAAM,CAACE,OAAP,CAAeP;AAF1B,OAAP;;AAKF;AACE,aAAOI,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAejB,WAAW,CAACgB,WAAD,EAAcf,eAAe,CAACC,eAAD,CAA7B,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {\n  NEW_MESSAGE,\n  CONNECTED,\n  CLEAR,\n  USER,\n  CLIENTS,\n  CURRENT_PLAYER,\n} from \"./actionConstants\";\n\nconst INITIAL_STATE = {\n  isConnected: false, // Extra state property for the last extension activity\n  messages: [],\n  clear: false,\n  user: \"\",\n  clients: [],\n  current_player: \"\",\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NEW_MESSAGE:\n      return { ...state, messages: action.payload.messages };\n    case CONNECTED:\n      return { ...state, isConnected: true };\n    case CLEAR:\n      return { ...state, clear: action.payload.p };\n    case USER:\n      return {\n        ...state,\n        user: action.payload.user,\n      };\n\n    case CLIENTS:\n      return {\n        ...state,\n        clients: action.payload.clients,\n      };\n\n    case CURRENT_PLAYER:\n      return {\n        ...state,\n        current_player: action.payload.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));\n"]},"metadata":{},"sourceType":"module"}