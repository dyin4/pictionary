{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { NEW_MESSAGE, CONNECTED, SHOW_SKETCH } from \"./actionConstants\";\nconst INITIAL_STATE = {\n  isConnected: false,\n  // Extra state property for the last extension activity\n  messages: [],\n  sketch: {}\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NEW_MESSAGE:\n      return { ...state,\n        messages: action.payload.messages\n      };\n\n    case CONNECTED:\n      return { ...state,\n        isConnected: true\n      };\n\n    case SHOW_SKETCH:\n      console.log(\"store \", action.payload.sketch);\n      return { ...state,\n        sketch: action.payload.sketch\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","NEW_MESSAGE","CONNECTED","SHOW_SKETCH","INITIAL_STATE","isConnected","messages","sketch","rootReducer","state","action","type","payload","console","log"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,mBAApD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,KADO;AACA;AACpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,MAAM,EAAE;AAHY,CAAtB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAArC,OAAP;;AACF,SAAKJ,SAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYJ,QAAAA,WAAW,EAAE;AAAzB,OAAP;;AACF,SAAKF,WAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAM,CAACE,OAAP,CAAeL,MAArC;AACA,aAAO,EAAE,GAAGE,KAAL;AAAYF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAAnC,OAAP;;AACF;AACE,aAAOE,KAAP;AATJ;AAWD,CAZD;;AAcA,eAAeX,WAAW,CAACU,WAAD,EAAcT,eAAe,CAACC,eAAD,CAA7B,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { NEW_MESSAGE, CONNECTED, SHOW_SKETCH } from \"./actionConstants\";\n\nconst INITIAL_STATE = {\n  isConnected: false, // Extra state property for the last extension activity\n  messages: [],\n  sketch: {},\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NEW_MESSAGE:\n      return { ...state, messages: action.payload.messages };\n    case CONNECTED:\n      return { ...state, isConnected: true };\n    case SHOW_SKETCH:\n      console.log(\"store \", action.payload.sketch);\n      return { ...state, sketch: action.payload.sketch };\n    default:\n      return state;\n  }\n};\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));\n"]},"metadata":{},"sourceType":"module"}