{"ast":null,"code":"import { NEW_MESSAGE, CONNECTED, CLEAR, USER, CLIENTS, CURRENT_PLAYER, NEW_TIME, GAME_START, SET_WORD } from \"./actionConstants\";\nimport { clear, joinChat, sendMessage, startTheGame, startTheTimer, start } from \"../client\"; // Action creator functions - use async actions to communicate with server\n// Replaces the direct call to joinChat in App\n\nexport const connectToChat = username => {\n  return dispatch => joinChat(username);\n}; // Replaces the direct call to sendMessage in Form\n\nexport const sendToChat = msg => {\n  return dispatch => sendMessage(msg);\n};\nexport const isConnected = () => ({\n  type: CONNECTED\n});\nexport const clearDraw = p => {\n  return dispatch => clear(p);\n}; // export const getCurrentPlayer = () => {\n//   return (dispatch) => getPlayer();\n// };\n\nexport const clearSketch = p => ({\n  type: CLEAR,\n  payload: {\n    p\n  }\n});\nexport const storeUser = user => ({\n  type: USER,\n  payload: {\n    user\n  }\n});\nexport const setCurrentPlayer = user => ({\n  type: CURRENT_PLAYER,\n  payload: {\n    user\n  }\n});\nexport const setWord = word => ({\n  type: SET_WORD,\n  payload: {\n    word\n  }\n});\nexport const newMessage = messages => ({\n  type: NEW_MESSAGE,\n  payload: {\n    messages\n  }\n});\nexport const getAllClients = clients => ({\n  type: CLIENTS,\n  payload: {\n    clients\n  }\n});\nexport const startGame = index => {\n  console.log(\"clicked start\", index);\n  return dispatch => {\n    startTheGame(index, result => {\n      dispatch(setCurrentPlayer(result));\n    });\n    startTheTimer(5, result => {\n      dispatch(newTime(result));\n    });\n  };\n};\n\nconst newTime = time => ({\n  type: NEW_TIME,\n  payload: {\n    time\n  }\n});\n\nexport const startTimer = (amount = 0) => {\n  return dispatch => {\n    startTheTimer(amount, result => {\n      dispatch(newTime(result));\n    });\n  };\n}; // export const setStart = (status) => {\n//   return (dispatch) => start(status);\n// };\n\nexport const updateStart = start => ({\n  type: GAME_START,\n  payload: {\n    start\n  }\n});","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/actions.js"],"names":["NEW_MESSAGE","CONNECTED","CLEAR","USER","CLIENTS","CURRENT_PLAYER","NEW_TIME","GAME_START","SET_WORD","clear","joinChat","sendMessage","startTheGame","startTheTimer","start","connectToChat","username","dispatch","sendToChat","msg","isConnected","type","clearDraw","p","clearSketch","payload","storeUser","user","setCurrentPlayer","setWord","word","newMessage","messages","getAllClients","clients","startGame","index","console","log","result","newTime","time","startTimer","amount","updateStart"],"mappings":"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","sourcesContent":["import {\n  NEW_MESSAGE,\n  CONNECTED,\n  CLEAR,\n  USER,\n  CLIENTS,\n  CURRENT_PLAYER,\n  NEW_TIME,\n  GAME_START,\n  SET_WORD,\n} from \"./actionConstants\";\nimport {\n  clear,\n  joinChat,\n  sendMessage,\n  startTheGame,\n  startTheTimer,\n  start,\n} from \"../client\";\n\n// Action creator functions - use async actions to communicate with server\n// Replaces the direct call to joinChat in App\nexport const connectToChat = (username) => {\n  return (dispatch) => joinChat(username);\n};\n\n// Replaces the direct call to sendMessage in Form\nexport const sendToChat = (msg) => {\n  return (dispatch) => sendMessage(msg);\n};\n\nexport const isConnected = () => ({ type: CONNECTED });\n\nexport const clearDraw = (p) => {\n  return (dispatch) => clear(p);\n};\n\n// export const getCurrentPlayer = () => {\n//   return (dispatch) => getPlayer();\n// };\n\nexport const clearSketch = (p) => ({\n  type: CLEAR,\n  payload: {\n    p,\n  },\n});\n\nexport const storeUser = (user) => ({\n  type: USER,\n  payload: {\n    user,\n  },\n});\n\nexport const setCurrentPlayer = (user) => ({\n  type: CURRENT_PLAYER,\n  payload: {\n    user,\n  },\n});\n\nexport const setWord = (word) => ({\n  type: SET_WORD,\n  payload: {\n    word,\n  },\n});\n\nexport const newMessage = (messages) => ({\n  type: NEW_MESSAGE,\n  payload: {\n    messages,\n  },\n});\n\nexport const getAllClients = (clients) => ({\n  type: CLIENTS,\n  payload: {\n    clients,\n  },\n});\n\nexport const startGame = (index) => {\n  console.log(\"clicked start\", index);\n  return (dispatch) => {\n    startTheGame(index, (result) => {\n      dispatch(setCurrentPlayer(result));\n    });\n\n    startTheTimer(5, (result) => {\n      dispatch(newTime(result));\n    });\n  };\n};\n\nconst newTime = (time) => ({\n  type: NEW_TIME,\n  payload: {\n    time,\n  },\n});\n\nexport const startTimer = (amount = 0) => {\n  return (dispatch) => {\n    startTheTimer(amount, (result) => {\n      dispatch(newTime(result));\n    });\n  };\n};\n\n// export const setStart = (status) => {\n//   return (dispatch) => start(status);\n// };\n\nexport const updateStart = (start) => ({\n  type: GAME_START,\n  payload: {\n    start,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}