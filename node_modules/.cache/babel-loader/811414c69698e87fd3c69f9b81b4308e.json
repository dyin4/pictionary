{"ast":null,"code":"import React, { useState } from \"react\";\nimport { startToDraw } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\n\nconst Sketch = p5 => {\n  let data = {};\n  let socket;\n\n  p5.myCustomRedrawAccordingToNewPropsHandler = props => {\n    console.log(\"prop\", props);\n\n    if (props.clear) {\n      p5.clear();\n      p5.background(250);\n      socket.emit(\"DRAWING\", {});\n    }\n\n    if (props.data) {\n      data = props.data;\n      console.log(\"data\", data);\n    }\n  };\n\n  p5.setup = () => {\n    socket = io.connect(\"localhost:4002\");\n    p5.createCanvas(670, 600);\n    p5.background(250);\n    socket.on(\"DRAWING\", data => {\n      p5.strokeWeight(10);\n      p5.line(data.mouseX, data.mouseY, data.pmouseX, data.pmouseY);\n    });\n  };\n\n  p5.draw = () => {\n    p5.line(data.mouseX, data.mouseY, data.pmouseX, data.pmouseY);\n  };\n\n  p5.mouseDragged = () => {\n    p5.strokeWeight(10);\n    p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\n    socket.emit(\"DRAWING\", {\n      mouseX: p5.mouseX,\n      mouseY: p5.mouseY,\n      pmouseX: p5.pmouseX,\n      pmouseY: p5.pmouseY\n    });\n  };\n};\n\n_c = Sketch;\nexport default Sketch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sketch\");","map":{"version":3,"sources":["/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/canvas/sketch.js"],"names":["React","useState","startToDraw","useDispatch","useSelector","io","Sketch","p5","data","socket","myCustomRedrawAccordingToNewPropsHandler","props","console","log","clear","background","emit","setup","connect","createCanvas","on","strokeWeight","line","mouseX","mouseY","pmouseX","pmouseY","draw","mouseDragged"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,MAAMC,MAAM,GAAIC,EAAD,IAAQ;AACrB,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,MAAJ;;AAEAF,EAAAA,EAAE,CAACG,wCAAH,GAA+CC,KAAD,IAAW;AACvDC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,KAApB;;AACA,QAAIA,KAAK,CAACG,KAAV,EAAiB;AACfP,MAAAA,EAAE,CAACO,KAAH;AACAP,MAAAA,EAAE,CAACQ,UAAH,CAAc,GAAd;AACAN,MAAAA,MAAM,CAACO,IAAP,CAAY,SAAZ,EAAuB,EAAvB;AACD;;AAED,QAAIL,KAAK,CAACH,IAAV,EAAgB;AACdA,MAAAA,IAAI,GAAGG,KAAK,CAACH,IAAb;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAApB;AACD;AACF,GAZD;;AAcAD,EAAAA,EAAE,CAACU,KAAH,GAAW,MAAM;AACfR,IAAAA,MAAM,GAAGJ,EAAE,CAACa,OAAH,CAAW,gBAAX,CAAT;AAEAX,IAAAA,EAAE,CAACY,YAAH,CAAgB,GAAhB,EAAqB,GAArB;AACAZ,IAAAA,EAAE,CAACQ,UAAH,CAAc,GAAd;AACAN,IAAAA,MAAM,CAACW,EAAP,CAAU,SAAV,EAAsBZ,IAAD,IAAU;AAC7BD,MAAAA,EAAE,CAACc,YAAH,CAAgB,EAAhB;AACAd,MAAAA,EAAE,CAACe,IAAH,CAAQd,IAAI,CAACe,MAAb,EAAqBf,IAAI,CAACgB,MAA1B,EAAkChB,IAAI,CAACiB,OAAvC,EAAgDjB,IAAI,CAACkB,OAArD;AACD,KAHD;AAID,GATD;;AAWAnB,EAAAA,EAAE,CAACoB,IAAH,GAAU,MAAM;AACdpB,IAAAA,EAAE,CAACe,IAAH,CAAQd,IAAI,CAACe,MAAb,EAAqBf,IAAI,CAACgB,MAA1B,EAAkChB,IAAI,CAACiB,OAAvC,EAAgDjB,IAAI,CAACkB,OAArD;AACD,GAFD;;AAIAnB,EAAAA,EAAE,CAACqB,YAAH,GAAkB,MAAM;AACtBrB,IAAAA,EAAE,CAACc,YAAH,CAAgB,EAAhB;AACAd,IAAAA,EAAE,CAACe,IAAH,CAAQf,EAAE,CAACgB,MAAX,EAAmBhB,EAAE,CAACiB,MAAtB,EAA8BjB,EAAE,CAACkB,OAAjC,EAA0ClB,EAAE,CAACmB,OAA7C;AAEAjB,IAAAA,MAAM,CAACO,IAAP,CAAY,SAAZ,EAAuB;AACrBO,MAAAA,MAAM,EAAEhB,EAAE,CAACgB,MADU;AAErBC,MAAAA,MAAM,EAAEjB,EAAE,CAACiB,MAFU;AAGrBC,MAAAA,OAAO,EAAElB,EAAE,CAACkB,OAHS;AAIrBC,MAAAA,OAAO,EAAEnB,EAAE,CAACmB;AAJS,KAAvB;AAMD,GAVD;AAWD,CA5CD;;KAAMpB,M;AA8CN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { startToDraw } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\n\nconst Sketch = (p5) => {\n  let data = {};\n  let socket;\n\n  p5.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n    console.log(\"prop\", props);\n    if (props.clear) {\n      p5.clear();\n      p5.background(250);\n      socket.emit(\"DRAWING\", {});\n    }\n\n    if (props.data) {\n      data = props.data;\n      console.log(\"data\", data);\n    }\n  };\n\n  p5.setup = () => {\n    socket = io.connect(\"localhost:4002\");\n\n    p5.createCanvas(670, 600);\n    p5.background(250);\n    socket.on(\"DRAWING\", (data) => {\n      p5.strokeWeight(10);\n      p5.line(data.mouseX, data.mouseY, data.pmouseX, data.pmouseY);\n    });\n  };\n\n  p5.draw = () => {\n    p5.line(data.mouseX, data.mouseY, data.pmouseX, data.pmouseY);\n  };\n\n  p5.mouseDragged = () => {\n    p5.strokeWeight(10);\n    p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\n\n    socket.emit(\"DRAWING\", {\n      mouseX: p5.mouseX,\n      mouseY: p5.mouseY,\n      pmouseX: p5.pmouseX,\n      pmouseY: p5.pmouseY,\n    });\n  };\n};\n\nexport default Sketch;\n"]},"metadata":{},"sourceType":"module"}