[{"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/index.js":"1","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/reportWebVitals.js":"2","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/views/App.js":"3","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/store.js":"4","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/actionConstants.js":"5","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/stateConstants.js":"6","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/canvas/canvas.js":"7","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/canvas/sketch.js":"8","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/join-chat.js":"9","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/actions.js":"10","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/client.js":"11","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/form.js":"12","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/messages.js":"13","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/player-list.js":"14","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/timer.js":"15","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/spinner.js":"16","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/word.js":"17","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/data/words.js":"18","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/game-status.js":"19","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/ProgressBar.js":"20","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/OnboardingSlides.js":"21","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/SlideIndicator.js":"22","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/Slide.js":"23"},{"size":718,"mtime":1618266432741,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1618260194311,"results":"26","hashOfConfig":"25"},{"size":3335,"mtime":1619662305386,"results":"27","hashOfConfig":"25"},{"size":1547,"mtime":1619662444270,"results":"28","hashOfConfig":"25"},{"size":449,"mtime":1619115368563,"results":"29","hashOfConfig":"25"},{"size":80,"mtime":1618262733186,"results":"30","hashOfConfig":"25"},{"size":1107,"mtime":1618875007661,"results":"31","hashOfConfig":"25"},{"size":1229,"mtime":1619663979768,"results":"32","hashOfConfig":"25"},{"size":2811,"mtime":1619662305384,"results":"33","hashOfConfig":"25"},{"size":2090,"mtime":1619662305385,"results":"34","hashOfConfig":"25"},{"size":2000,"mtime":1619663946586,"results":"35","hashOfConfig":"25"},{"size":2262,"mtime":1619662305383,"results":"36","hashOfConfig":"25"},{"size":1020,"mtime":1619662305384,"results":"37","hashOfConfig":"25"},{"size":501,"mtime":1619662305384,"results":"38","hashOfConfig":"25"},{"size":632,"mtime":1619662305384,"results":"39","hashOfConfig":"25"},{"size":249,"mtime":1618631634396,"results":"40","hashOfConfig":"25"},{"size":1093,"mtime":1619662305385,"results":"41","hashOfConfig":"25"},{"size":80,"mtime":1618778710172,"results":"42","hashOfConfig":"25"},{"size":1187,"mtime":1619662305383,"results":"43","hashOfConfig":"25"},{"size":547,"mtime":1619662305381,"results":"44","hashOfConfig":"25"},{"size":4158,"mtime":1619662305380,"results":"45","hashOfConfig":"25"},{"size":213,"mtime":1619662305381,"results":"46","hashOfConfig":"25"},{"size":124,"mtime":1619662305381,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"14a2d6f",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/index.js",["104"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.css\";\nimport App from \"./views/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport bootstrap from \"bootstrap\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["105","106"],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/reportWebVitals.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/views/App.js",["107","108","109"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport OnboardingSlides from \"../components/OnboardingSlides\";\nimport Canvas from \"../components/canvas/canvas\";\nimport Messages from \"../components/messages\";\nimport Form from \"../components/form\";\nimport { startGame, setStart, updateStart } from \"../redux/actions\";\nimport PlayerList from \"../components/player-list\";\nimport Timer from \"../components/timer\";\nimport Spinner from \"../components/spinner\";\nimport Word from \"../components/word\";\nimport GameStatus from \"../components/game-status\";\n\nconst PLAYER_NUM = 2;\n\nconst App = () => {\n  const isConnected = useSelector((state) => state.isConnected);\n  const start = useSelector((state) => state.start);\n  const [clickStart, setClick] = useState(false);\n  const current_player = useSelector((state) => state.current_player);\n  const clients = useSelector((state) => state.clients);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (start == \"start\") {\n      setClick(false);\n    }\n  }, [start, dispatch]);\n  console.log(\"connected\", isConnected);\n  console.log(\"start\", start);\n  console.log(\"current user\", current_player);\n  return (\n    <div className=\"p-app\">\n      {isConnected ? (\n        <>\n          <header className=\"p-header\">\n            <div className=\"siteheader\">CS7580 Final Porject - Pictionary</div>\n          </header>\n\n          {clients.length < PLAYER_NUM && (\n            <div className=\"p-waiting\">\n              <Spinner />\n              <div className=\"notice\">\n                Hi {user}, please wait for other players to join\n              </div>\n            </div>\n          )}\n          {clickStart && (\n            <div className=\"p-waiting\">\n              <Spinner />\n              <div className=\"notice\">\n                Hi {user}, please wait for other players to click start\n              </div>\n            </div>\n          )}\n\n          <div className=\"p-board\">\n            <div className=\"p-sidebar\">\n              <div className=\"p-start\">\n                {clients.length >= PLAYER_NUM && start !== \"start\" && (\n                  <button\n                    className=\"btn btn-primary float-right button-green\"\n                    onClick={() => {\n                      setClick(true);\n                      dispatch(startGame(0));\n                    }}\n                  >\n                    START DRAWING!\n                  </button>\n                )}\n              </div>\n\n              <div className=\"p-status\">\n                <GameStatus />\n                <Timer />\n              </div>\n\n              <div className=\"p-status\">\n                <Word />\n              </div>\n            </div>\n\n            <div className=\"p-canvas\">\n              <Canvas />\n            </div>\n\n            <div className=\"p-chatbar\">\n              <div className=\"chat\">\n                <div className=\"notice\">Chat Room</div>\n                <Messages className=\"chat__buffer\" />\n                <Form className=\"chatbox\" />\n              </div>\n              <div className=\"userlist\">\n                <PlayerList />\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <OnboardingSlides />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/store.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/actionConstants.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/stateConstants.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/canvas/canvas.js",["110"],"import { useEffect, useState } from \"react\";\nimport sketch from \"./sketch\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearDraw } from \"../../redux/actions\";\n\nconst Canvas = () => {\n  const data = useSelector((state) => state.sketch);\n  const dispatch = useDispatch();\n  const cleared = useSelector((state) => state.clear);\n  const current_player = useSelector((state) => state.current_player);\n  const user = useSelector((state) => state.user);\n  const [clear, setClear] = useState(false);\n\n  useEffect(() => {\n    dispatch(clearDraw(clear));\n  }, [clear]);\n\n  useEffect(() => {\n    setClear(true);\n  }, [current_player]);\n  console.log(\"clear\", clear);\n  return (\n    <>\n      <P5Wrapper\n        sketch={sketch}\n        clear={cleared}\n        data={data}\n        setClear={setClear}\n        disable={user !== current_player}\n      ></P5Wrapper>\n      {user === current_player && (\n        <button className=\"btn btn-danger\" onClick={() => setClear(true)}>\n          clear\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Canvas;\n","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/canvas/sketch.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/join-chat.js",["111","112"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProgressBar from \"./ProgressBar\";\nlet progressTimer = null;\n\nconst JoinChat = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [isValid, setIsValid] = useState(null);\n  const gameInProgress = useSelector((state) => state.start);\n  const [progress, setProgress] = useState(0);\n\n  const showProgress = () => {\n    setProgress((prevProgress) => {\n      if (prevProgress < 100) return prevProgress + 1;\n      else {\n        clearInterval(progressTimer);\n        return 100;\n      } \n    });\n  };\n  const startProcess = () => {\n    setProgress(0);\n    progressTimer = setInterval(showProgress, 1000);\n  };\n\n  const dispatch = useDispatch();\n\n  const processInput = (event) => {\n    if (event.keyCode !== 13) {\n      if (event.target.value.length > 0) {\n        setUsername(event.target.value);\n        setIsValid(true);\n      } else {\n        setIsValid(false);\n        setUsername(event.target.value);\n      }\n    }\n  };\n\n  const verifyUsername = () => {\n    if (username.length > 0) {\n      setIsValid(true);\n      props.name(username)\n      props.callback('over')\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const onKeyUp = (event) => {\n    if (event.keyCode === 13) verifyUsername();\n  };\n\n  useEffect(() => {\n    if (gameInProgress === \"start\") {\n      startProcess();\n    }\n  }, [gameInProgress]);\n\n  console.log(\"job game status\", gameInProgress);\n\n  return (\n    <form className=\"my-4\" onSubmit={(e) => e.preventDefault()}>\n      <div className=\"row\"  id=\"joinchat-info\">\n        <h1>Welcome to Pictionary</h1>\n        <h2>Please join to play :D</h2>\n        <div className=\"col\">\n          <input\n            aria-label=\"Your username\"\n            type=\"text\"\n            className=\"form-control has-validation\"\n            id=\"username-info\"\n            invalid={`${isValid === false}`}\n            valid={`${isValid === true}`}\n            placeholder=\"Username\"\n            value={username}\n            onChange={processInput}\n            onKeyUp={onKeyUp}\n          />\n          <div\n            className=\"invalid-feedback\"\n            style={\n              isValid === false ? { display: \"block\" } : { display: \"none\" }\n            }\n          >\n            Username cannot be empty!\n          </div>\n        </div>\n        <div className=\"col-auto\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary float-right\"\n            id=\"join-button\"\n            onClick={verifyUsername}\n            disabled={gameInProgress === \"start\"}\n          >\n            Join Chat\n          </button>\n        </div>\n      </div>\n      {gameInProgress === \"start\" && <ProgressBar progress={progress} />}\n    </form>\n  );\n};\n\nexport default JoinChat;\n","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/redux/actions.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/client.js",["113","114"],"import store from \"./redux/store\";\nimport {\n  newMessage,\n  isConnected,\n  getAllClients,\n  clearSketch,\n  updateStart,\n  setCurrentPlayer,\n  gameStatus,\n} from \"./redux/actions\";\n\n/** CLIENT CONFIGURATION - connect to the server */\nconst socketIOClient = require(\"socket.io-client\");\nconst deploy = \"reactpictionary.herokuapp.com\";\n\n// When deployed, connect to the hosted server, otherwise connect to local server\n// Localhost port must match server\nlet host = process.env.NODE_ENV === \"production\" ? deploy : \"localhost:4002\";\nlet socket = socketIOClient.connect(host, { secure: true });\n// Checks which host we're connected to (for troubleshooting);\nconsole.log(\"connected to \" + host);\n\nsocket.on(\"notification\", (msg) => {\n  console.log(msg);\n});\n\nsocket.on(\"all messages\", (msg) => {\n  console.log(msg);\n  store.dispatch(newMessage(msg));\n});\n\nsocket.on(\"chat joined\", () => {\n  store.dispatch(isConnected());\n});\n\nsocket.on(\"clients\", (clients) => {\n  store.dispatch(getAllClients(clients));\n});\n\nsocket.on(\"game\", (s) => {\n  store.dispatch(updateStart(s));\n});\n\nsocket.on(\"clear\", (p) => {\n  store.dispatch(clearSketch(p));\n});\n\nexport const joinChat = (username) => {\n  socket.emit(\"join\", username);\n};\n\nexport const sendMessage = (msg) => {\n  socket.emit(\"new message\", msg);\n};\n\nexport const sendRightAnswerMsg = (msg) => {\n  socket.emit(\"right answer\", msg);\n};\n\nexport const clear = (p) => {\n  socket.emit(\"clear\", p);\n};\n\nexport const end = () => {\n  socket.emit(\"game\", \"end\");\n};\n\nexport const startTheGame = (index, callbackFunc) => {\n  console.log(\"client\", index);\n  socket.off(\"current player\"); // Prevent duplicates\n  socket.emit(\"start timer\", index);\n  socket.on(\"current player\", (time) => {\n    console.log(\"current player\", time);\n    callbackFunc(time);\n  });\n};\n\nexport const startTheTimer = (time, callbackFunc) => {\n  socket.off(\"time\"); // Prevent duplicates\n  socket.emit(\"start timer time\", time);\n\n  socket.on(\"time\", (time) => {\n    callbackFunc(time);\n  });\n};\n","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/form.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/messages.js",["115","116","117"],"import { useSelector } from \"react-redux\";\n\nconst Messages = () => {\n  const messages = useSelector((state) => state.messages);\n  const word = useSelector((state) => state.word);\n\n\n  return (\n    <div className=\"message-box\">\n      <table className=\"table table-striped table-bordered my-4\">\n        <tbody>\n          {messages.map((message, index) => {\n            console.log(message);\n            console.log(message.indexOf(\"the right answer\"));\n            let arr = message.split(\" \");\n            let username = arr[0];\n            let answer = arr[2];\n\n            return (\n              <tr ke={`msg-${index}`}>\n                <td\n                  className={`${\n                    message.indexOf(\"the right answer\") !== -1\n                      ? \"table-success\"\n                      : \"\"\n                  }`}\n                >\n                  {message}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Messages;\n","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/player-list.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/timer.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/spinner.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/word.js",["118"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { words } from \"../data/words\";\nimport { setWord } from \"../redux/actions\";\nconst Word = () => {\n  const current_player = useSelector((state) => state.current_player);\n  const clients = useSelector((state) => state.clients);\n  const user = useSelector((state) => state.user);\n  const start = useSelector((state) => state.start);\n  const [word, setCurrentWord] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(\"current player\", current_player);\n    if (current_player !== null) {\n      let index = clients.indexOf(current_player);\n      console.log(\"index\", index);\n      let current_word = words[index];\n      console.log(\"current_word\", current_word);\n      dispatch(setWord(current_word));\n      setCurrentWord(current_word);\n    }\n  }, [dispatch, current_player]);\n\n  return (\n    <>\n      {current_player === user && start !== \"end\" && (\n        <div className=\"word\">Current Word: {word}</div>\n      )}\n    </>\n  );\n};\n\nexport default Word;\n","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/data/words.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/game-status.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport JoinChat from \"../components/join-chat\";\nimport Canvas from \"../components/canvas/canvas\";\nimport Messages from \"../components/messages\";\nimport Form from \"../components/form\";\nimport { startGame, setStart, updateStart } from \"../redux/actions\";\nimport PlayerList from \"../components/player-list\";\nimport Timer from \"../components/timer\";\nimport Spinner from \"../components/spinner\";\nimport Word from \"../components/word\";\n\nconst GameStatus = () => {\n  const user = useSelector((state) => state.user);\n  const start = useSelector((state) => state.start);\n  const current_player = useSelector((state) => state.current_player);\n  const clients = useSelector((state) => state.clients);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className=\"notice-user\"> Hello, {user} </div>\n      <div className=\"notice-player\">\n        {current_player !== null && start === \"start\"\n          ? `Player ${current_player} is drawing`\n          : \"\"}\n      </div>\n      {start === \"end\" && <div className=\"game-over\">GAME OVER</div>}\n    </>\n  );\n};\n\nexport default GameStatus;\n","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/ProgressBar.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/OnboardingSlides.js",["134"],"import { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport Slide from \"./Slide\";\nimport SlideIndicator from \"./SlideIndicator\";\nimport JoinChat from \"./join-chat\";\nimport { connectToChat, gameStatus, storeUser } from \"../redux/actions\";\n\nconst TOTAL_SLIDES = 3;\n\nconst OnboardingSlides = () => {\n  const [activeSlide, setActiveSlide] = useState(1);\n  const [onBoardState, setOnBoardState] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const setSlideState = (id) => {\n    if (id === activeSlide) return \"active\";\n    return \"inactive\";\n  };\n\n  const nextSlide = () => {\n    let id = activeSlide;\n    id < TOTAL_SLIDES ? setActiveSlide(id + 1) : overBoarding();\n  };\n\n  function jcCallback(data) {\n    if (data === \"over\") {\n      setOnBoardState(true);\n    }\n  }\n\n  function nameCallback(name) {\n    setUserName(name);\n  }\n\n  function overBoarding() {\n    dispatch(connectToChat(userName));\n    dispatch(storeUser(userName));\n  }\n\n  const generateSlideIndicators = () => {\n    let indicators = [];\n    for (let i = 1; i <= TOTAL_SLIDES; i++) {\n      indicators.push(\n        <SlideIndicator\n          slideStatus={setSlideState(i)}\n          key={i}\n          slideID={i}\n          clickHandler={() => setActiveSlide(i)}\n        />\n      );\n    }\n    return indicators;\n  };\n\n  return (\n    <div>\n      {onBoardState ? (\n        <>\n          <label>\n            You have played before?{\" \"}\n            <button className=\"btn btn-success\" onClick={() => overBoarding()}>\n              Skip\n            </button>\n            the tutorial\n          </label>\n\n          <div className=\"slides-bg\">\n            <Slide slideStatus={setSlideState(1)} slideId={1}>\n              <h1>Step 1. Wait other players</h1>\n              <p className=\"slides-text\">\n                In the chat room, you will wait other players to join in to\n                start play\n                <br />\n                At least 2 players are required to start a game\n              </p>\n              <div className=\"fit my-4\">\n                <img\n                  src={process.env.PUBLIC_URL + \"/111.gif\"}\n                  className=\"img-fluid my-4 float-right fit\"\n                  alt=\"The app on iPad and iPhone\"\n                />\n              </div>\n            </Slide>\n            <Slide slideStatus={setSlideState(2)} slideId={2}>\n              <h1>Step 2. Draw picture according to word</h1>\n              <p className=\"slides-text\">\n                After the game start, host player can see the word given.\n                <br />\n                That player can start draw picture on canvas.\n              </p>\n              <div className=\"fit my-4\">\n                <img\n                  src={process.env.PUBLIC_URL + \"/222.gif\"}\n                  className=\"img-fluid my-4 float-right fit\"\n                  alt=\"The app on iPad and iPhone\"\n                />\n              </div>\n            </Slide>\n            <Slide slideStatus={setSlideState(3)} slideId={3}>\n              <h1>Step 3. Guess it!</h1>\n              <p className=\"slides-text\">\n                Other players can answer the word they guess in chat box.\n                <br />\n                If someone answers correctly, the host will be passed to next player. If no answer is correctly, game ends.\n              </p>\n              <div className=\"fit my-4\">\n                <img\n                  src={process.env.PUBLIC_URL + \"/333.gif\"}\n                  className=\"img-fluid my-4 float-right fit\"\n                  alt=\"The app on iPad and iPhone\"\n                />\n              </div>\n            </Slide>\n            <div className=\"slides-controls\">\n              <div className=\"align-center\">{generateSlideIndicators()}</div>\n              <button className=\"align-right control-btn\" onClick={nextSlide}>\n                {activeSlide < TOTAL_SLIDES ? \"Next\" : \"Done\"}\n              </button>\n            </div>\n          </div>\n        </>\n      ) : (\n        <>\n          <JoinChat callback={jcCallback} name={nameCallback} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default OnboardingSlides;\n","/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/SlideIndicator.js",[],"/Users/danyin/Desktop/CS7580/dan_yin_fan_fan_joyce_liu_xiaoyan_qin_finalproject/src/components/Slide.js",[],{"ruleId":"135","severity":1,"message":"136","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":17},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"135","severity":1,"message":"143","line":8,"column":21,"nodeType":"137","messageId":"138","endLine":8,"endColumn":29},{"ruleId":"135","severity":1,"message":"144","line":8,"column":31,"nodeType":"137","messageId":"138","endLine":8,"endColumn":42},{"ruleId":"145","severity":1,"message":"146","line":27,"column":15,"nodeType":"147","messageId":"148","endLine":27,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":17,"column":6,"nodeType":"151","endLine":17,"endColumn":13,"suggestions":"152"},{"ruleId":"135","severity":1,"message":"153","line":26,"column":9,"nodeType":"137","messageId":"138","endLine":26,"endColumn":17},{"ruleId":"149","severity":1,"message":"154","line":58,"column":6,"nodeType":"151","endLine":58,"endColumn":22,"suggestions":"155"},{"ruleId":"135","severity":1,"message":"156","line":8,"column":3,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"157","line":9,"column":3,"nodeType":"137","messageId":"138","endLine":9,"endColumn":13},{"ruleId":"135","severity":1,"message":"158","line":5,"column":9,"nodeType":"137","messageId":"138","endLine":5,"endColumn":13},{"ruleId":"135","severity":1,"message":"159","line":16,"column":17,"nodeType":"137","messageId":"138","endLine":16,"endColumn":25},{"ruleId":"135","severity":1,"message":"160","line":17,"column":17,"nodeType":"137","messageId":"138","endLine":17,"endColumn":23},{"ruleId":"149","severity":1,"message":"161","line":24,"column":6,"nodeType":"151","endLine":24,"endColumn":32,"suggestions":"162"},{"ruleId":"135","severity":1,"message":"163","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":18},{"ruleId":"135","severity":1,"message":"164","line":1,"column":20,"nodeType":"137","messageId":"138","endLine":1,"endColumn":29},{"ruleId":"135","severity":1,"message":"165","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":16},{"ruleId":"135","severity":1,"message":"166","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":14},{"ruleId":"135","severity":1,"message":"167","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":16},{"ruleId":"135","severity":1,"message":"168","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":12},{"ruleId":"135","severity":1,"message":"169","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"143","line":8,"column":21,"nodeType":"137","messageId":"138","endLine":8,"endColumn":29},{"ruleId":"135","severity":1,"message":"144","line":8,"column":31,"nodeType":"137","messageId":"138","endLine":8,"endColumn":42},{"ruleId":"135","severity":1,"message":"170","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":18},{"ruleId":"135","severity":1,"message":"171","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":13},{"ruleId":"135","severity":1,"message":"172","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":15},{"ruleId":"135","severity":1,"message":"173","line":12,"column":8,"nodeType":"137","messageId":"138","endLine":12,"endColumn":12},{"ruleId":"135","severity":1,"message":"174","line":18,"column":9,"nodeType":"137","messageId":"138","endLine":18,"endColumn":16},{"ruleId":"135","severity":1,"message":"153","line":19,"column":9,"nodeType":"137","messageId":"138","endLine":19,"endColumn":17},{"ruleId":"135","severity":1,"message":"157","line":6,"column":25,"nodeType":"137","messageId":"138","endLine":6,"endColumn":35},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"'setStart' is defined but never used.","'updateStart' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'startProcess'. Either include it or remove the dependency array.",["178"],"'setCurrentPlayer' is defined but never used.","'gameStatus' is defined but never used.","'word' is assigned a value but never used.","'username' is assigned a value but never used.","'answer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clients'. Either include it or remove the dependency array.",["179"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'JoinChat' is defined but never used.","'Canvas' is defined but never used.","'Messages' is defined but never used.","'Form' is defined but never used.","'startGame' is defined but never used.","'PlayerList' is defined but never used.","'Timer' is defined but never used.","'Spinner' is defined but never used.","'Word' is defined but never used.","'clients' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [clear, dispatch]",{"range":"186","text":"187"},"Update the dependencies array to be: [gameInProgress, startProcess]",{"range":"188","text":"189"},"Update the dependencies array to be: [dispatch, current_player, clients]",{"range":"190","text":"191"},[614,621],"[clear, dispatch]",[1416,1432],"[gameInProgress, startProcess]",[886,912],"[dispatch, current_player, clients]"]